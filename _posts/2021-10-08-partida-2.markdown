---
title: La Partida 2
layout: post
date: 2021-10-08
categories: contabilidad
---

# La Partida Segunda Parte

Hola! En este post seguiremos esforzándonos en generar un formato de partida tal como se les exige a los contadores.


La tarea que dejamos la repetimos aquí para mayor comodidad y el archivo que Ud. debe usar como punto de partida también.


Clique aqui para bajar el archivo [partida-3.clp](/partida-3.clp)
Use abductor para generar contabilidad online [Abductor](http://abductor.necios.cl/)


Lo que se nos pide en la Tarea es bastante exigente pero, lo ayudaremos paso a paso si le parece bien.

Esto es lo que hay que agregarle a la partida.

- [x] Cantidad que se abona al lado de la cuenta de abono
- [x] Cantidad que se carga al lado de la cuenta de cargo
- [x] Una línea verticial (no es necesario que sea una línea contínua, no exagere, basta usar el caracter \| en cada renglón).
- [x] La línea vertical debe separar el lado izquierdo del lado derecho de una cuenta. Así en contabilidad ellos saben que lo que se pone del lado izquierdo es el cargo y lo que se pone del lado derecho es el abono.
- [x] Un renglón más abajo de todo lo anterior que tenga el cargo el símbolo \| y el abono
- [x] Otro renglón debajo de lo explicado que tenga un comentario breve: Traspaso desde cuenta x a cuenta y por un valor de tanto. 


Recordemos que la técnica que hemos estado usando para mostrar las partidas es hacer una regla prioritaria que se dispara ante la entrada en memoria de cualquier ***facts*** **partida**. Eso es para que en el encabezado podamos informar al lector que estaremos dando inicio a una partida y entonces colocamos el identificador de la partida.

Si pensamos en términos de prioridades podemos diseñar un pie de partida que muestre datos de resúmenes y otros que Ud. desee pero siempre al final de todo lo que se haya mostrado de la partida en cuestión.

La regla del pie de partida debe tener un prioridad menor a las regla de encabezado y a cualquier otra que se haya de disparar con relación a la partida.


Entonces tenemos una estructura así;

Partida
1. Encabezado
2. Cuerpo
3. Pie


El cuerpo es variable pues corresponde al contenido de las partidas y no podemos pensar que todas las partidas sean iguales. Pero al menos podemos suponer que debe informarse de las cuentas que están involucradas en la partida.

Todo esto ya le hemos hecho en partida-3.clp pero lo volvemos a explicar porque es importante entender cómo se hace esto con reglas d de un expert system.

Una última vez más. Las reglas de un expert system tienen una parte sensible llamado Lado Izquiero (LHS) que hará accionar a la regla, eso se llama **fire** y en castellano se acepta decir que las reglas se disparan. Entonces, usando ese lenguaje, la primera regla que se tiene que disparar es la del encabezado y la última es la del pie.


Si revisamos la tarea, debemos identificar a qué parte de la estructura convendría asignarla cada cosa, así es fácil ver que los datos de abonos y cargos debieran ir en el cuerpo, así como un pedazo de línea vertical y que el resto debiera ir en el pie de partida. 

Los tramos de línea vertical se van componiendo hasta que al final quede una línea vertical a trazos discontínuos.


Esta es mi soluciónm, échele un vistazo y abajo me explico.

{% highlight CLIPS %}

(defrule pie
  (declare (salience 100))
  (partida (numero ?numero))
  =>
  (printout t "------------------" crlf)
);


(defrule cuerpo-de-cargo
  (declare (salience 1000))
  (partida (numero ?numero))
  (cargo (cuenta ?cuenta) (partida ?numero) (monto ?monto))
  =>
  (printout t tab ?monto "......|..............." ?cuenta crlf)
);


(defrule cuerpo-de-abono
  (declare (salience 1000))
  (partida (numero ?numero))
  (abono (cuenta ?cuenta) (partida ?numero) (monto ?monto))
  =>
  (printout t "........... |.... " ?monto "...." ?cuenta crlf)
);

{% endhighlight %}


Clique aqui para bajar el archivo [partida-4.clp](/partida-4.clp)
Use abductor para generar contabilidad online [Abductor](http://abductor.necios.cl/)


Acá verá que he definido dos reglas reemplazando a las anteriores que tenían que ver con los cargos y los abonos. Compare los archivos partida-3.clp y partida-4-clp.

También definí una regla nueva que se llama pie, la cual solo escribre una línea. 

Es importante notar los valors de salience en las dos reglas de cuerpo y la del pie. _note_ que la regla del pie tiene una saliencia menor: **100**. Eso asegura que el pie nunca se imprima antes que los cuerpos.


El resultado es el siguiente:


{% highlight CLIPS %}

 ==> f-1 (partida (numero 1) (dia 1) (mes enero) (ano 2021))

==> f-2 (cuenta (nombre caja) (debe 0) (haber 0))

==> f-3 (abono (partida 1) (cuenta caja) (monto 100) (realizado false))

==> f-4 (cuenta (nombre banco) (debe 0) (haber 0))

==> f-5 (cargo (partida 1) (cuenta banco) (monto 100) (realizado false))

Partida 1

------------------

100......|...............banco

........... |.... 100....caja

------------------ 
{% endhighlight %}

## Análisis

En este post hemos resuelto la forma de mostrar una partida con solo lo imprescindible:

Las transacciones y las cuentas en las que se desarrollan.

Inicialmente Ud. asserta la partida, las cuentas de la partida y las transacciones. Debe tener cuidado de que los montos de las transacciones sean iguales lado a lado. Eso es aplicar la regla de igualdad de la Contabilidad y nos permite no comprometer nuestros recursos sin que hayamos conseguiro cómo financiarlos. En breve: siempre debe comprobar que la suma de cada lado por separado coincidad. TTambién puede programarlo en el expert system, pero eso no es bueno pues es Ud. quien debe estar consciente de lo que haga. Es una forma de autoeducarse en finanzas o responsabilidad financiera.


Volviendo, en esta tarea no hemos hecho nada con las reglas de las transacciones, ellas siguen iguales, solo hemos hecho un esfuerzo  por mostrar la partida que es un conjunto de movimientos entre cuentas que tienen un sentido finaciero. El de esta tarea es un traspaso entre cuentas. La cuenta de donde se saca se carga y la que recibe el monto se abona. Este monto debe ser exactamente el mismo. 


Haremos una mejora para mostrar el nombre de la transacción. En general se coloca "Por ....". Ahora lo verá.

Para ello, solo hemos de colocar un pintout en el pie.

Para agregar lo que hemos llamado glosa de la partida, debemos agregar un campo glosa al template partida para que se pueda usar desde el pie. Por lo que debemos modificar la regla pie para que haga un printout con ese valor. 

No olvide agregar el contenido de la glosa cuando asserte la partida.

Estas son las reglas que hemos modificado

{% highlight CLIPS %}

(deftemplate partida
   (slot glosa)
   (slot numero)
   (slot dia)
   (slot mes)
   (slot ano));


(defrule pie
  (declare (salience 100))
  (partida (numero ?numero) (glosa ?glosa))
  =>
  (printout t "------------------" crlf)
);


(defrule inicio
  (declare (salience 10000))
  =>
  ( watch facts)

  ( assert (partida  (glosa "Traspaso desde cuenta Caja a Banco por un valor de 100.")  (numero 1) (dia 1) (mes enero) (ano 2021) ))
  ( assert (cuenta (nombre caja) (debe 0)))
  ( assert (abono (partida 1) (cuenta caja) (monto 100)))

  ( assert (cuenta (nombre banco) (debe 0)))
  ( assert (cargo (partida 1) (cuenta banco) (monto 100)))

);
{% endhighlight %}



Este es el resultado que hemos obtenido

{% highlight CLIPS %}

 Partida 1

------------------

100......|...............banco

........... |.... 100....caja

------------------

Por Traspaso desde cuenta Caja a Banco por un valor de 100. 

{% endhighlight %}

Clique aqui para bajar el archivo [partida-5.clp](/partida-5.clp)
Use abductor para generar contabilidad online [Abductor](http://abductor.necios.cl/)







 
